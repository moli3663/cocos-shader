// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <cc-global>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  void main () {
    vec4 o = vec4(1, 1, 1, 1);

    #if USE_TEXTURE
    o *= texture(texture, v_uv0);
      #if CC_USE_ALPHA_ATLAS_TEXTURE
      o.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;
      #endif
    #endif

    o *= v_color;

    ALPHA_TEST(o);

    o.x = 0.5 * cos(cc_time.x + v_uv0.x + 4.0); 
    o.y = 0.5 * cos(cc_time.y + v_uv0.y + 1.0); 
    o.z = 0.5 * cos(cc_time.z + v_uv0.x + 0.0); 
    gl_FragColor = 0.5 + 0.5 * o;

  }
}%





    // void mainImage( out vec4 fragColor, in vec2 fragCoord )
    // {
    //     // Normalized pixel coordinates (from 0 to 1)
    //     vec2 uv = fragCoord/iResolution.xy;
    //     // Time varying pixel color
    //     vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));
    //     // Output to screen
    //     fragColor = vec4(col,1.0);
    // }

    // if(v_uv0.x > 0.1 && v_uv0.x < 0.2) {
    //   o.x = 0.0;
    // }
    // if(v_uv0.y > 0.1 && v_uv0.y < 0.2) {
    //   o.y = 0.0;
    // }
    // if(v_uv0.x > 0.8 && v_uv0.x < 0.9) {
    //   o.z = 0.0;
    // }
    // if(v_uv0.y > 0.8 && v_uv0.y < 0.9) {
    //   o.y = 0.0;
    // }

    // // gl_FragCoord = vec4(1, 1, 1, 1);

    // gl_FragColor = o;